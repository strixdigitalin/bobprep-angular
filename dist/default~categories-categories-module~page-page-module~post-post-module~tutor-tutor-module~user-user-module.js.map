{"version":3,"sources":["../../src/config/ngx-smart-modal.config.ts","../../src/components/ngx-smart-modal.component.ts","../../src/services/ngx-smart-modal-stack.service.ts","../../src/services/ngx-smart-modal.service.ts","../../src/modules/ngx-smart-modal.module.ts"],"names":[],"mappings":"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","file":"default~categories-categories-module~page-page-module~post-post-module~tutor-tutor-module~user-user-module.js","sourcesContent":["export const NgxSmartModalConfig = {\n    bodyClassOpen: 'dialog-open',\n    prefixEvent: 'ngx-smart-modal.'\n};\n\nexport interface INgxSmartModalOptions {\n    closable?: boolean;\n    escapable?: boolean;\n    dismissable?: boolean;\n    customClass?: string;\n    backdrop?: boolean;\n    force?: boolean;\n    hideDelay?: number;\n    autostart?: boolean;\n    target?: string;\n    ariaLabel?: string;\n    ariaLabelledBy?: string;\n    ariaDescribedBy?: string;\n    refocus?: boolean;\n}\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n  Type,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NgxSmartModalConfig } from '../config/ngx-smart-modal.config';\n\n@Component({\n  selector: 'ngx-smart-modal',\n  template: `\n    <div *ngIf=\"overlayVisible\"\n         [style.z-index]=\"visible ? layerPosition-1 : -1\"\n         [ngClass]=\"{'transparent':!backdrop, 'overlay':true, 'nsm-overlay-open':openedClass}\"\n         (mousedown)=\"dismiss($event)\" #nsmOverlay>\n      <div [style.z-index]=\"visible ? layerPosition : -1\"\n           [ngClass]=\"['nsm-dialog', customClass, openedClass ? 'nsm-dialog-open': 'nsm-dialog-close']\" #nsmDialog\n           [attr.aria-hidden]=\"openedClass ? false : true\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledBy\"\n           [attr.aria-describedby]=\"ariaDescribedBy\">\n        <div class=\"nsm-content\" #nsmContent>\n          <div class=\"nsm-body\">\n            <ng-template #dynamicContent></ng-template>\n            <ng-content></ng-content>\n\n          </div>\n          <button type=\"button\" *ngIf=\"closable\" (click)=\"close()\" aria-label=\"Close\" class=\"nsm-dialog-btn-close\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\"\n                 xml:space=\"preserve\" width=\"16px\" height=\"16px\">\n              <g>\n                <path d=\"M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249    C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306    C514.019,27.23,514.019,14.135,505.943,6.058z\"\n                      fill=\"currentColor\"/>\n              </g>\n              <g>\n                <path d=\"M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636    c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z\"\n                      fill=\"currentColor\"/>\n              </g>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class NgxSmartModalComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() public closable: boolean = true;\n  @Input() public escapable: boolean = true;\n  @Input() public dismissable: boolean = true;\n  @Input() public identifier: string = '';\n  @Input() public customClass: string = 'nsm-dialog-animation-fade';\n  @Input() public visible: boolean = false;\n  @Input() public backdrop: boolean = true;\n  @Input() public force: boolean = true;\n  @Input() public hideDelay: number = 500;\n  @Input() public autostart: boolean = false;\n  @Input() public target: string = '';\n  @Input() public ariaLabel: string | null = null;\n  @Input() public ariaLabelledBy: string | null = null;\n  @Input() public ariaDescribedBy: string | null = null;\n  @Input() public refocus: boolean = true;\n\n  @Output() public visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() public onClose: EventEmitter<any> = new EventEmitter();\n  @Output() public onCloseFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onDismiss: EventEmitter<any> = new EventEmitter();\n  @Output() public onDismissFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onAnyCloseEvent: EventEmitter<any> = new EventEmitter();\n  @Output() public onAnyCloseEventFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onOpen: EventEmitter<any> = new EventEmitter();\n  @Output() public onOpenFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onEscape: EventEmitter<any> = new EventEmitter();\n  @Output() public onDataAdded: EventEmitter<any> = new EventEmitter();\n  @Output() public onDataRemoved: EventEmitter<any> = new EventEmitter();\n\n  public contentComponent: Type<Component>;\n  public layerPosition: number = 1041;\n  public overlayVisible: boolean = false;\n  public openedClass: boolean = false;\n\n  public createFrom = 'html';\n\n  private _data: any;\n\n  @ViewChildren('nsmContent') private nsmContent: QueryList<ElementRef>;\n  @ViewChildren('nsmDialog') public nsmDialog: QueryList<ElementRef>;\n  @ViewChildren('nsmOverlay') private nsmOverlay: QueryList<ElementRef>;\n  @ViewChildren('dynamicContent', { read: ViewContainerRef }) dynamicContentContainer: QueryList<ViewContainerRef>;\n\n  constructor(\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    @Inject(DOCUMENT) private _document: any,\n    @Inject(PLATFORM_ID) private _platformId: any,\n  ) { }\n\n  public ngOnInit(): void {\n    if (!this.identifier || !this.identifier.length) {\n      throw new Error('identifier field isn’t set. Please set one before calling <ngx-smart-modal> in a template.');\n    }\n\n    this._sendEvent('create');\n  }\n\n  public ngAfterViewInit(): void {\n    if (this.contentComponent) {\n      const factory = this.componentFactoryResolver.resolveComponentFactory(this.contentComponent);\n      this.createDynamicContent(this.dynamicContentContainer, factory);\n      this.dynamicContentContainer.changes.subscribe((contentViewContainers: QueryList<ViewContainerRef>) => {\n        this.createDynamicContent(contentViewContainers, factory);\n      });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._sendEvent('delete');\n  }\n\n  /**\n   * Open the modal instance\n   *\n   * @param top open the modal top of all other\n   * @returns the modal component\n   */\n  public open(top?: boolean): NgxSmartModalComponent {\n    this._sendEvent('open', { top: top });\n\n    return this;\n  }\n\n  /**\n   * Close the modal instance\n   *\n   * @returns the modal component\n   */\n  public close(): NgxSmartModalComponent {\n    this._sendEvent('close');\n\n    return this;\n  }\n\n  /**\n   * Dismiss the modal instance\n   *\n   * @param e the event sent by the browser\n   * @returns the modal component\n   */\n  public dismiss(e: any): NgxSmartModalComponent {\n    if (!this.dismissable || !e.target.classList.contains('overlay')) {\n      return this;\n    }\n\n    this._sendEvent('dismiss');\n\n    return this;\n  }\n\n  /**\n   * Toggle visibility of the modal instance\n   *\n   * @param top open the modal top of all other\n   * @returns the modal component\n   */\n  public toggle(top?: boolean): NgxSmartModalComponent {\n    this._sendEvent('toggle', { top: top });\n\n    return this;\n  }\n\n  /**\n   * Add a custom class to the modal instance\n   *\n   * @param className the class to add\n   * @returns the modal component\n   */\n  public addCustomClass(className: string): NgxSmartModalComponent {\n    if (!this.customClass.length) {\n      this.customClass = className;\n    } else {\n      this.customClass += ' ' + className;\n    }\n\n    return this;\n  }\n\n  /**\n   * Remove a custom class to the modal instance\n   *\n   * @param className the class to remove\n   * @returns the modal component\n   */\n  public removeCustomClass(className?: string): NgxSmartModalComponent {\n    if (className) {\n      this.customClass = this.customClass.replace(className, '').trim();\n    } else {\n      this.customClass = '';\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the visibility state of the modal instance\n   */\n  public isVisible(): boolean {\n    return this.visible;\n  }\n\n  /**\n   * Checks if data is attached to the modal instance\n   */\n  public hasData(): boolean {\n    return this._data !== undefined;\n  }\n\n  /**\n   * Attach data to the modal instance\n   *\n   * @param data the data to attach\n   * @param force override potentially attached data\n   * @returns the modal component\n   */\n  public setData(data: any, force?: boolean): NgxSmartModalComponent {\n    if (!this.hasData() || (this.hasData() && force)) {\n      this._data = data;\n      this.onDataAdded.emit(this._data);\n      this.markForCheck();\n    }\n\n    return this;\n  }\n\n  /**\n   * Retrieve the data attached to the modal instance\n   */\n  public getData(): any {\n    return this._data;\n  }\n\n  /**\n   * Remove the data attached to the modal instance\n   *\n   * @returns the modal component\n   */\n  public removeData(): NgxSmartModalComponent {\n    this._data = undefined;\n    this.onDataRemoved.emit(true);\n    this.markForCheck();\n\n    return this;\n  }\n\n  /**\n   * Add body class modal opened\n   *\n   * @returns the modal component\n   */\n  public addBodyClass(): NgxSmartModalComponent {\n    this._renderer.addClass(this._document.body, NgxSmartModalConfig.bodyClassOpen);\n\n    return this;\n  }\n\n  /**\n   * Add body class modal opened\n   *\n   * @returns the modal component\n   */\n  public removeBodyClass(): NgxSmartModalComponent {\n    this._renderer.removeClass(this._document.body, NgxSmartModalConfig.bodyClassOpen);\n\n    return this;\n  }\n\n  public markForCheck() {\n    try {\n      this._changeDetectorRef.detectChanges();\n    } catch (e) {\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Listens for window resize event and recalculates modal instance position if it is element-relative\n   */\n  @HostListener('window:resize')\n  public targetPlacement(): boolean | void {\n    if (!this.isBrowser || !this.nsmDialog.length || !this.nsmContent.length || !this.nsmOverlay.length || !this.target) {\n      return false;\n    }\n    const targetElement = this._document.querySelector(this.target);\n\n    if (!targetElement) {\n      return false;\n    }\n\n    const targetElementRect = targetElement.getBoundingClientRect();\n    const bodyRect = this.nsmOverlay.first.nativeElement.getBoundingClientRect();\n\n    const nsmContentRect = this.nsmContent.first.nativeElement.getBoundingClientRect();\n    const nsmDialogRect = this.nsmDialog.first.nativeElement.getBoundingClientRect();\n\n    const marginLeft = parseInt(getComputedStyle(this.nsmContent.first.nativeElement).marginLeft as any, 10);\n    const marginTop = parseInt(getComputedStyle(this.nsmContent.first.nativeElement).marginTop as any, 10);\n\n    let offsetTop = targetElementRect.top - nsmDialogRect.top - ((nsmContentRect.height - targetElementRect.height) / 2);\n    let offsetLeft = targetElementRect.left - nsmDialogRect.left - ((nsmContentRect.width - targetElementRect.width) / 2);\n\n    if (offsetLeft + nsmDialogRect.left + nsmContentRect.width + (marginLeft * 2) > bodyRect.width) {\n      offsetLeft = bodyRect.width - (nsmDialogRect.left + nsmContentRect.width) - (marginLeft * 2);\n    } else if (offsetLeft + nsmDialogRect.left < 0) {\n      offsetLeft = -nsmDialogRect.left;\n    }\n\n    if (offsetTop + nsmDialogRect.top + nsmContentRect.height + marginTop > bodyRect.height) {\n      offsetTop = bodyRect.height - (nsmDialogRect.top + nsmContentRect.height) - marginTop;\n    }\n\n    this._renderer.setStyle(this.nsmContent.first.nativeElement, 'top', (offsetTop < 0 ? 0 : offsetTop) + 'px');\n    this._renderer.setStyle(this.nsmContent.first.nativeElement, 'left', offsetLeft + 'px');\n  }\n\n  private _sendEvent(name: string, extraData?: any): boolean {\n    if (!this.isBrowser) {\n      return false;\n    }\n\n    const data = {\n      extraData: extraData,\n      instance: { id: this.identifier, modal: this }\n    };\n\n    const event = new CustomEvent(NgxSmartModalConfig.prefixEvent + name, { detail: data });\n\n    return window.dispatchEvent(event);\n  }\n\n  /**\n   * Is current platform browser\n   */\n  private get isBrowser(): boolean {\n    return isPlatformBrowser(this._platformId);\n  }\n\n  /**\n   * Creates content inside provided ViewContainerRef\n   */\n  private createDynamicContent(changes: QueryList<ViewContainerRef>, factory: ComponentFactory<Component>): void {\n    changes.forEach((viewContainerRef: ViewContainerRef) => {\n      viewContainerRef.clear();\n      viewContainerRef.createComponent(factory);\n      this.markForCheck();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NgxSmartModalComponent } from '../../src/components/ngx-smart-modal.component';\nimport { ModalInstance } from './modal-instance';\n\n@Injectable()\nexport class NgxSmartModalStackService {\n  private _modalStack: ModalInstance[];\n\n  constructor() {\n    this._modalStack = [];\n  }\n\n  /**\n   * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n   * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n   *\n   * @param modalInstance The object that contains the given modal identifier and the modal itself.\n   * @param force Optional parameter that forces the overriding of modal instance if it already exists.\n   * @returns nothing special.\n   */\n  public addModal(modalInstance: ModalInstance, force?: boolean): void {\n    if (force) {\n      const i: number = this._modalStack.findIndex((o: ModalInstance) => o.id === modalInstance.id);\n      if (i > -1) {\n        this._modalStack[i].modal = modalInstance.modal;\n      } else {\n        this._modalStack.push(modalInstance);\n      }\n      return;\n    }\n    this._modalStack.push(modalInstance);\n  }\n\n  /**\n   * Retrieve a modal instance by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public getModal(id: string): NgxSmartModalComponent {\n    const i = this._modalStack.find((o: ModalInstance) => o.id === id);\n\n    if (i !== undefined) {\n      return i.modal;\n    } else {\n      throw new Error(`Cannot find modal with identifier ${id}`);\n    }\n  }\n\n  /**\n   * Retrieve all the created modals.\n   *\n   * @returns an array that contains all modal instances.\n   */\n  public getModalStack(): ModalInstance[] {\n    return this._modalStack;\n  }\n\n  /**\n   * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n   *\n   * @returns an array that contains all the opened modals.\n   */\n  public getOpenedModals(): ModalInstance[] {\n    return this._modalStack.filter((o: ModalInstance) => o.modal.visible);\n  }\n\n  /**\n   * Retrieve the opened modal with highest z-index.\n   *\n   * @returns the opened modal with highest z-index.\n   */\n  public getTopOpenedModal(): NgxSmartModalComponent {\n    if (!this.getOpenedModals().length) {\n      throw new Error('No modal is opened');\n    }\n\n    return this.getOpenedModals()\n      .map((o: ModalInstance) => o.modal)\n      .reduce((highest, item) => item.layerPosition > highest.layerPosition ? item : highest, this.getOpenedModals()[0].modal);\n  }\n\n  /**\n   * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n   * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n   * Use it to make a modal appear foreground.\n   *\n   * @returns a higher index from all the existing modal instances.\n   */\n  public getHigherIndex(): number {\n    return Math.max(...this._modalStack.map((o) => o.modal.layerPosition), 1041) + 1;\n  }\n\n  /**\n   * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n   *\n   * @returns the number of modal instances.\n   */\n  public getModalStackCount(): number {\n    return this._modalStack.length;\n  }\n\n  /**\n   * Remove a modal instance from the modal stack.\n   *\n   * @param id The modal identifier.\n   * @returns the removed modal instance.\n   */\n  public removeModal(id: string): void {\n    const i: number = this._modalStack.findIndex((o: any) => o.id === id);\n    if (i > -1) {\n      this._modalStack.splice(i, 1);\n    }\n  }\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n  EmbeddedViewRef,\n  Inject,\n  TemplateRef,\n  Type,\n  PLATFORM_ID\n} from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\nimport { NgxSmartModalComponent } from '../../src/components/ngx-smart-modal.component';\nimport { NgxSmartModalConfig, INgxSmartModalOptions } from '../../src/config/ngx-smart-modal.config';\nimport { NgxSmartModalStackService } from '../../src/services/ngx-smart-modal-stack.service';\n\nimport { ModalInstance } from './modal-instance';\n\nexport type Content<T> = string | TemplateRef<T> | Type<T>;\n\n@Injectable()\nexport class NgxSmartModalService {\n  private lastElementFocused: any;\n\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _injector: Injector,\n    private _modalStack: NgxSmartModalStackService,\n    private applicationRef: ApplicationRef,\n    @Inject(DOCUMENT) private _document: any,\n    @Inject(PLATFORM_ID) private _platformId: any\n  ) {\n    this._addEvents();\n  }\n\n  /**\n   * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n   * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n   *\n   * @param modalInstance The object that contains the given modal identifier and the modal itself.\n   * @param force Optional parameter that forces the overriding of modal instance if it already exists.\n   * @returns nothing special.\n   */\n  public addModal(modalInstance: ModalInstance, force?: boolean): void {\n    this._modalStack.addModal(modalInstance, force);\n  }\n\n  /**\n   * Retrieve a modal instance by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public getModal(id: string): NgxSmartModalComponent {\n    return this._modalStack.getModal(id);\n  }\n\n  /**\n   * Alias of `getModal` to retrieve a modal instance by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public get(id: string): NgxSmartModalComponent {\n    return this.getModal(id);\n  }\n\n  /**\n   * Open a given modal\n   *\n   * @param id The modal identifier used at creation time.\n   * @param force Tell the modal to open top of all other opened modals\n   */\n  public open(id: string, force = false): boolean {\n    return this._openModal(this.get(id), force);\n  }\n\n  /**\n   * Close a given modal\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public close(id: string): boolean {\n    return this._closeModal(this.get(id));\n  }\n\n  /**\n   * Close all opened modals\n   */\n  public closeAll(): void {\n    this.getOpenedModals().forEach((instance: ModalInstance) => {\n      this._closeModal(instance.modal);\n    });\n  }\n\n  /**\n   * Toggles a given modal\n   * If the retrieved modal is opened it closes it, else it opens it.\n   *\n   * @param id The modal identifier used at creation time.\n   * @param force Tell the modal to open top of all other opened modals\n   */\n  public toggle(id: string, force = false): boolean {\n    return this._toggleModal(this.get(id), force);\n  }\n\n  /**\n   * Retrieve all the created modals.\n   *\n   * @returns an array that contains all modal instances.\n   */\n  public getModalStack(): ModalInstance[] {\n    return this._modalStack.getModalStack();\n  }\n\n  /**\n   * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n   *\n   * @returns an array that contains all the opened modals.\n   */\n  public getOpenedModals(): ModalInstance[] {\n    return this._modalStack.getOpenedModals();\n  }\n\n  /**\n   * Retrieve the opened modal with highest z-index.\n   *\n   * @returns the opened modal with highest z-index.\n   */\n  public getTopOpenedModal(): NgxSmartModalComponent {\n    return this._modalStack.getTopOpenedModal();\n  }\n\n  /**\n   * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n   * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n   * Use it to make a modal appear foreground.\n   *\n   * @returns a higher index from all the existing modal instances.\n   */\n  public getHigherIndex(): number {\n    return this._modalStack.getHigherIndex();\n  }\n\n  /**\n   * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n   *\n   * @returns the number of modal instances.\n   */\n  public getModalStackCount(): number {\n    return this._modalStack.getModalStackCount();\n  }\n\n  /**\n   * Remove a modal instance from the modal stack.\n   *\n   * @param id The modal identifier.\n   * @returns the removed modal instance.\n   */\n  public removeModal(id: string): void {\n    this._modalStack.removeModal(id);\n  }\n\n  /**\n   * Associate data to an identified modal. If the modal isn't already associated to some data, it creates a new\n   * entry in the `modalData` array with its `id` and the given `data`. If the modal already has data, it rewrites\n   * them with the new ones. Finally if no modal found it returns an error message in the console and false value\n   * as method output.\n   *\n   * @param data The data you want to associate to the modal.\n   * @param id The modal identifier.\n   * @param force If true, overrides the previous stored data if there was.\n   * @returns true if the given modal exists and the process has been tried, either false.\n   */\n  public setModalData(data: any, id: string, force?: boolean): boolean {\n    let i;\n    if (i = this.get(id)) {\n      i.setData(data, force);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Retrieve modal data by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   * @returns the associated modal data.\n   */\n  public getModalData(id: string): any {\n    let i;\n    if (i = this.get(id)) {\n      return i.getData();\n    }\n\n    return null;\n  }\n\n  /**\n   * Reset the data attached to a given modal.\n   *\n   * @param id The modal identifier used at creation time.\n   * @returns the removed data or false if modal doesn't exist.\n   */\n  public resetModalData(id: string): any | boolean {\n    if (!!this._modalStack.getModalStack().find((o: ModalInstance) => o.id === id)) {\n      const removed: any = this.getModal(id).getData();\n      this.getModal(id).removeData();\n      return removed;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Close the latest opened modal if it has been declared as escapable\n   * Using a debounce system because one or more modals could be listening\n   * escape key press event.\n   */\n  public closeLatestModal(): void {\n    this.getTopOpenedModal().close();\n  }\n\n  /**\n   * Create dynamic NgxSmartModalComponent\n   * @param id The modal identifier used at creation time.\n   * @param content The modal content ( string, templateRef or Component )\n   */\n  public create<T>(id: string, content: Content<T>, options: INgxSmartModalOptions = {}) {\n    try {\n      return this.getModal(id);\n    } catch (e) {\n      const componentFactory = this._componentFactoryResolver.resolveComponentFactory(NgxSmartModalComponent);\n      const ngContent = this._resolveNgContent(content);\n\n      const componentRef = componentFactory.create(this._injector, ngContent);\n\n      if (content instanceof Type) {\n        componentRef.instance.contentComponent = content;\n      }\n\n      componentRef.instance.identifier = id;\n      componentRef.instance.createFrom = 'service';\n\n      if (typeof options.closable === 'boolean') { componentRef.instance.closable = options.closable; }\n      if (typeof options.escapable === 'boolean') { componentRef.instance.escapable = options.escapable; }\n      if (typeof options.dismissable === 'boolean') { componentRef.instance.dismissable = options.dismissable; }\n      if (typeof options.customClass === 'string') { componentRef.instance.customClass = options.customClass; }\n      if (typeof options.backdrop === 'boolean') { componentRef.instance.backdrop = options.backdrop; }\n      if (typeof options.force === 'boolean') { componentRef.instance.force = options.force; }\n      if (typeof options.hideDelay === 'number') { componentRef.instance.hideDelay = options.hideDelay; }\n      if (typeof options.autostart === 'boolean') { componentRef.instance.autostart = options.autostart; }\n      if (typeof options.target === 'string') { componentRef.instance.target = options.target; }\n      if (typeof options.ariaLabel === 'string') { componentRef.instance.ariaLabel = options.ariaLabel; }\n      if (typeof options.ariaLabelledBy === 'string') { componentRef.instance.ariaLabelledBy = options.ariaLabelledBy; }\n      if (typeof options.ariaDescribedBy === 'string') { componentRef.instance.ariaDescribedBy = options.ariaDescribedBy; }\n      if (typeof options.refocus === 'boolean') { componentRef.instance.refocus = options.refocus; }\n\n      this._appRef.attachView(componentRef.hostView);\n\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      this._document.body.appendChild(domElem);\n\n      return componentRef.instance;\n    }\n  }\n\n  private _addEvents(): boolean {\n    if (!this.isBrowser) {\n      return false;\n    }\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'create', ((e: CustomEvent) => {\n      this._initModal(e.detail.instance);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'delete', ((e: CustomEvent) => {\n      this._deleteModal(e.detail.instance);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'open', ((e: CustomEvent) => {\n      this._openModal(e.detail.instance.modal, e.detail.top);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'toggle', ((e: CustomEvent) => {\n      this._toggleModal(e.detail.instance.modal, e.detail.top);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'close', ((e: CustomEvent) => {\n      this._closeModal(e.detail.instance.modal);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'dismiss', ((e: CustomEvent) => {\n      this._dismissModal(e.detail.instance.modal);\n    }) as EventListener);\n\n    window.addEventListener('keyup', this._escapeKeyboardEvent);\n\n    return true;\n  }\n\n  private _initModal(modalInstance: ModalInstance) {\n    modalInstance.modal.layerPosition += this.getModalStackCount();\n    this.addModal(modalInstance, modalInstance.modal.force);\n\n    if (modalInstance.modal.autostart) {\n      this.open(modalInstance.id);\n    }\n  }\n\n  private _openModal(modal: NgxSmartModalComponent, top?: boolean): boolean {\n    if (modal.visible) {\n      return false;\n    }\n\n    this.lastElementFocused = document.activeElement;\n\n    if (modal.escapable) {\n      window.addEventListener('keyup', this._escapeKeyboardEvent);\n    }\n\n    if (modal.backdrop) {\n      window.addEventListener('keydown', this._trapFocusModal);\n    }\n\n    if (top) {\n      modal.layerPosition = this.getHigherIndex();\n    }\n\n    modal.addBodyClass();\n    modal.overlayVisible = true;\n    modal.visible = true;\n    modal.onOpen.emit(modal);\n    modal.markForCheck();\n\n    setTimeout(() => {\n      modal.openedClass = true;\n\n      if (modal.target) {\n        modal.targetPlacement();\n      }\n\n      modal.nsmDialog.first.nativeElement.setAttribute('role', 'dialog');\n      modal.nsmDialog.first.nativeElement.setAttribute('tabIndex', '-1');\n      modal.nsmDialog.first.nativeElement.setAttribute('aria-modal', 'true');\n      modal.nsmDialog.first.nativeElement.focus();\n\n      modal.markForCheck();\n      modal.onOpenFinished.emit(modal);\n    });\n\n    return true;\n  }\n\n  private _toggleModal(modal: NgxSmartModalComponent, top?: boolean): boolean {\n    if (modal.visible) {\n      return this._closeModal(modal);\n    } else {\n      return this._openModal(modal, top);\n    }\n  }\n\n  private _closeModal(modal: NgxSmartModalComponent): boolean {\n    if (!modal.openedClass) {\n      return false;\n    }\n\n    modal.openedClass = false;\n    modal.onClose.emit(modal);\n    modal.onAnyCloseEvent.emit(modal);\n\n    if (this.getOpenedModals().length < 2) {\n      modal.removeBodyClass();\n      window.removeEventListener('keyup', this._escapeKeyboardEvent);\n      window.removeEventListener('keydown', this._trapFocusModal);\n    }\n\n    setTimeout(() => {\n      modal.visibleChange.emit(modal.visible);\n      modal.visible = false;\n      modal.overlayVisible = false;\n      modal.nsmDialog.first.nativeElement.removeAttribute('tabIndex');\n      modal.markForCheck();\n      modal.onCloseFinished.emit(modal);\n      modal.onAnyCloseEventFinished.emit(modal);\n      if (modal.refocus) {\n        this.lastElementFocused.focus();\n      }\n    }, modal.hideDelay);\n\n    return true;\n  }\n\n  private _dismissModal(modal: NgxSmartModalComponent): boolean {\n    if (!modal.openedClass) {\n      return false;\n    }\n\n    modal.openedClass = false;\n    modal.onDismiss.emit(modal);\n    modal.onAnyCloseEvent.emit(modal);\n\n    if (this.getOpenedModals().length < 2) {\n      modal.removeBodyClass();\n    }\n\n    setTimeout(() => {\n      modal.visible = false;\n      modal.visibleChange.emit(modal.visible);\n      modal.overlayVisible = false;\n      modal.markForCheck();\n      modal.onDismissFinished.emit(modal);\n      modal.onAnyCloseEventFinished.emit(modal);\n    }, modal.hideDelay);\n\n    return true;\n  }\n\n  private _deleteModal(modalInstance: ModalInstance) {\n    this.removeModal(modalInstance.id);\n\n    if (!this.getModalStack().length) {\n      modalInstance.modal.removeBodyClass();\n    }\n  }\n\n  /**\n   * Resolve content according to the types\n   * @param content The modal content ( string, templateRef or Component )\n   */\n  private _resolveNgContent<T>(content: Content<T>): any[][] | Text[][] {\n    if (typeof content === 'string') {\n      const element = this._document.createTextNode(content);\n      return [[element]];\n    }\n\n    if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(null as any);\n      this.applicationRef.attachView(viewRef);\n      return [viewRef.rootNodes];\n    }\n\n    return [];\n  }\n\n  /**\n   * Close the latest opened modal if escape key event is emitted\n   * @param event The Keyboard Event\n   */\n  private _escapeKeyboardEvent = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      try {\n        const modal = this.getTopOpenedModal();\n\n        if (!modal.escapable) {\n          return false;\n        }\n\n        modal.onEscape.emit(modal);\n        this.closeLatestModal();\n\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Is current platform browser\n   */\n  private get isBrowser(): boolean {\n    return isPlatformBrowser(this._platformId);\n  }\n\n  /**\n   * While modal is open, the focus stay on it\n   * @param event The Keyboar dEvent\n   */\n  private _trapFocusModal = (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      try {\n        const modal = this.getTopOpenedModal();\n\n        if (!modal.nsmDialog.first.nativeElement.contains(document.activeElement)) {\n          event.preventDefault();\n          event.stopPropagation();\n          modal.nsmDialog.first.nativeElement.focus();\n        }\n\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NgxSmartModalService } from '../services/ngx-smart-modal.service';\nimport { NgxSmartModalStackService } from '../services/ngx-smart-modal-stack.service';\nimport { NgxSmartModalComponent } from '../components/ngx-smart-modal.component';\n\n@NgModule({\n  declarations: [NgxSmartModalComponent],\n  entryComponents: [NgxSmartModalComponent],\n  exports: [NgxSmartModalComponent],\n  imports: [CommonModule]\n})\nexport class NgxSmartModalModule {\n  /**\n   * Use in AppModule: new instance of NgxSmartModal.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxSmartModalModule,\n      providers: [\n        NgxSmartModalService,\n        NgxSmartModalStackService\n      ]\n    };\n  }\n\n  /**\n   * Use in features modules with lazy loading: new instance of NgxSmartModal.\n   */\n  public static forChild(): ModuleWithProviders {\n    return {\n      ngModule: NgxSmartModalModule,\n      providers: [\n        NgxSmartModalService,\n        NgxSmartModalStackService\n      ]\n    };\n  }\n\n  constructor(private serivce: NgxSmartModalService) {\n  }\n}\n"],"sourceRoot":"webpack:///"}