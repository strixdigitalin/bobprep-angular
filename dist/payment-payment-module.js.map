{"version":3,"sources":["./src/app/payment/components/cancel/cancel.html","./src/app/payment/components/pay/pay.html","./src/app/payment/components/success/success.html","./src/app/appointment/services/appointment.service.ts","./src/app/payment/components/cancel/cancel.component.ts","./src/app/payment/components/pay/pay.component.ts","./src/app/payment/components/success/success.component.ts","./src/app/payment/payment.module.ts","./src/app/payment/payment.routing.ts","./src/app/payment/payment.service.ts","./src/app/webinar/webinar.service.ts"],"names":[],"mappings":"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","file":"payment-payment-module.js","sourcesContent":["export default \"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n  <span translate>Payment cancel! will redirect in</span> <strong>{{second}}s</strong>\\r\\n</div>\\r\\n\";","export default \"<section class=\\\"sm-padding\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"card-horizontal max-width-900 mx-auto\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <h3 translate>Make your Payment for the {{targetType}} {{targetName}}, with Tutor {{tutorName}}</h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <form class=\\\"form-stripe\\\" (ngSubmit)=\\\"buy()\\\" [formGroup]=\\\"stripeTest\\\">\\r\\n        <div class=\\\"row input-border mt-4\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"name\\\"\\r\\n                placeholder=\\\"{{'Enter name' | translate}}\\\"\\r\\n                name=\\\"cardHolderName\\\"\\r\\n              />\\r\\n              <div\\r\\n                class=\\\"gift-courseErrors\\\"\\r\\n                *ngIf=\\\"stripeTest.controls.name.errors && (stripeTest.controls.name.dirty || stripeTest.controls.name.touched|| submitted)\\\"\\r\\n              >\\r\\n                <p\\r\\n                  [hidden]=\\\"!stripeTest.controls.name.errors.required\\\"\\r\\n                  class=\\\"error\\\"\\r\\n                  style=\\\"margin-bottom: 0\\\"\\r\\n                  translate\\r\\n                >\\r\\n                  Name is required\\r\\n                </p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"address_line1\\\"\\r\\n                placeholder=\\\"{{'Enter address' | translate}}\\\"\\r\\n                name=\\\"line1\\\"\\r\\n              />\\r\\n              <div\\r\\n                class=\\\"gift-courseErrors\\\"\\r\\n                *ngIf=\\\"stripeTest.controls.address_line1.errors && (stripeTest.controls.address_line1.dirty || stripeTest.controls.address_line1.touched|| submitted)\\\"\\r\\n              >\\r\\n                <p\\r\\n                  [hidden]=\\\"!stripeTest.controls.address_line1.errors.required\\\"\\r\\n                  class=\\\"error\\\"\\r\\n                  style=\\\"margin-bottom: 0\\\"\\r\\n                  translate\\r\\n                >\\r\\n                  Address is required\\r\\n                </p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"address_city\\\"\\r\\n                placeholder=\\\"{{'Enter city' | translate}}\\\"\\r\\n                name=\\\"city\\\"\\r\\n              />\\r\\n              <div\\r\\n                class=\\\"gift-courseErrors\\\"\\r\\n                *ngIf=\\\"stripeTest.controls.address_city.errors && (stripeTest.controls.address_city.dirty || stripeTest.controls.address_city.touched || submitted)\\\"\\r\\n              >\\r\\n                <p\\r\\n                  [hidden]=\\\"!stripeTest.controls.address_city.errors.required\\\"\\r\\n                  class=\\\"error\\\"\\r\\n                  style=\\\"margin-bottom: 0\\\"\\r\\n                  translate\\r\\n                >\\r\\n                  City is required\\r\\n                </p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"address_state\\\"\\r\\n                placeholder=\\\"{{'Enter state' | translate}}\\\"\\r\\n                name=\\\"state\\\"\\r\\n              />\\r\\n              <div\\r\\n                class=\\\"gift-courseErrors\\\"\\r\\n                *ngIf=\\\"stripeTest.controls.address_state.errors && (stripeTest.controls.address_state.dirty || stripeTest.controls.address_state.touched|| submitted)\\\"\\r\\n              >\\r\\n                <p\\r\\n                  [hidden]=\\\"!stripeTest.controls.address_state.errors.required\\\"\\r\\n                  class=\\\"error\\\"\\r\\n                  style=\\\"margin-bottom: 0\\\"\\r\\n                  translate\\r\\n                >\\r\\n                  State is required\\r\\n                </p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group hide-clear-all\\\">\\r\\n              <!-- <input\\r\\n                class=\\\"form-control\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"address_country\\\"\\r\\n                placeholder=\\\"{{'Enter country' | translate}}\\\"\\r\\n                name=\\\"country\\\"\\r\\n              /> -->\\r\\n              <ng-select\\r\\n                [items]=\\\"countries\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                name=\\\"country\\\"\\r\\n                bindLabel=\\\"name\\\"\\r\\n                bindValue=\\\"code\\\"\\r\\n                [multiple]=\\\"false\\\"\\r\\n                [closeOnSelect]=\\\"true\\\"\\r\\n                formControlName=\\\"address_country\\\"\\r\\n                placeholder=\\\"{{'Enter country' | translate}}\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <div\\r\\n                class=\\\"gift-courseErrors\\\"\\r\\n                *ngIf=\\\"stripeTest.controls.address_country.errors && (stripeTest.controls.address_country.dirty || stripeTest.controls.address_country.touched|| submitted)\\\"\\r\\n              >\\r\\n                <p\\r\\n                  [hidden]=\\\"!stripeTest.controls.address_country.errors.required\\\"\\r\\n                  class=\\\"error\\\"\\r\\n                  style=\\\"margin-bottom: 0\\\"\\r\\n                  translate\\r\\n                >\\r\\n                  Country is required\\r\\n                </p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"address_zip\\\"\\r\\n                placeholder=\\\"{{'Enter zip code' | translate}}\\\"\\r\\n                name=\\\"zip-code\\\"\\r\\n              />\\r\\n              <div\\r\\n                class=\\\"gift-courseErrors\\\"\\r\\n                *ngIf=\\\"stripeTest.controls.address_zip.errors && (stripeTest.controls.address_zip.dirty || stripeTest.controls.address_zip.touched|| submitted)\\\"\\r\\n              >\\r\\n                <p\\r\\n                  [hidden]=\\\"!stripeTest.controls.address_zip.errors.required\\\"\\r\\n                  class=\\\"error\\\"\\r\\n                  style=\\\"margin-bottom: 0\\\"\\r\\n                  translate\\r\\n                >\\r\\n                  Zip code is required\\r\\n                </p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div> -->\\r\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"type === 'gift'\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"{{'Recipient\\\\'s email id' | translate}}\\\"\\r\\n                name=\\\"email\\\"\\r\\n                formControlName=\\\"emailRecipient\\\"\\r\\n              />\\r\\n              <div\\r\\n                class=\\\"gift-courseErrors\\\"\\r\\n                *ngIf=\\\"stripeTest.controls.emailRecipient.errors && (stripeTest.controls.emailRecipient.dirty || stripeTest.controls.emailRecipient.touched|| submitted)\\\"\\r\\n              >\\r\\n                <p\\r\\n                  [hidden]=\\\"!stripeTest.controls.emailRecipient.errors.required\\\"\\r\\n                  class=\\\"error\\\"\\r\\n                  style=\\\"margin-bottom: 0\\\"\\r\\n                  translate\\r\\n                >\\r\\n                  Email is required\\r\\n                </p>\\r\\n                <p\\r\\n                  [hidden]=\\\"!stripeTest.controls.emailRecipient.errors.email\\\"\\r\\n                  class=\\\"error\\\"\\r\\n                  style=\\\"margin-bottom: 0\\\"\\r\\n                  translate\\r\\n                >\\r\\n                  Email is invalid format\\r\\n                </p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <ngx-stripe-card\\r\\n              class=\\\"form-control form-group\\\"\\r\\n              [options]=\\\"cardOptions\\\"\\r\\n              [elementsOptions]=\\\"elementsOptions\\\"\\r\\n            ></ngx-stripe-card>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"row mb-3 mt-3 row-cols-1 row-cols-lg-2\\\">\\r\\n              <div class=\\\"col-8\\\">\\r\\n                <img src=\\\"assets/images/dummy-card2.png\\\" alt=\\\"\\\" class=\\\"float-left image-md mr-2\\\" />\\r\\n                <h5 class=\\\"font-md\\\">1234 1234 1234 1234</h5>\\r\\n              </div>\\r\\n              <div class=\\\"col-4 text-right\\\">\\r\\n                <span class=\\\"font-weight-bold mr-3 font-md\\\">12/23</span>\\r\\n                <span class=\\\"font-weight-bold font-md\\\">455</span>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mb-3 mt-3 row-cols-1 row-cols-lg-2\\\">\\r\\n              <div class=\\\"col-8\\\">\\r\\n                <img src=\\\"assets/images/dummy-card3.png\\\" alt=\\\"\\\" class=\\\"float-left image-md mr-2\\\" />\\r\\n                <h5 class=\\\"font-md\\\">1234 1234 1234 1234</h5>\\r\\n              </div>\\r\\n              <div class=\\\"col-4 text-right\\\">\\r\\n                <span class=\\\"font-weight-bold mr-3 font-md\\\">12/23</span>\\r\\n                <span class=\\\"font-weight-bold font-md\\\">455</span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div> -->\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-green mr-2 btn-pay-now\\\"\\r\\n                [disabled]=\\\"loading || (type === 'gift' && stripeTest.get('emailRecipient').value === (currentUser && currentUser.email))\\\"\\r\\n              >\\r\\n                <span translate>Pay Now</span>\\r\\n                <div *ngIf=\\\"loading\\\" class=\\\"spinner-border text-primary\\\" role=\\\"status\\\">\\r\\n                  <span class=\\\"sr-only\\\" translate><span translate>Loading</span>...</span>\\r\\n                </div>\\r\\n              </button>\\r\\n            </div>\\r\\n            <!-- <button class=\\\"btn btn-green mr-2 btn-pay-now\\\" type=\\\"button\\\" (click)=\\\"confirm()\\\" [disabled]=\\\"loading\\\">\\r\\n              <span translate>Confirm</span>\\r\\n              <div *ngIf=\\\"loading\\\" class=\\\"spinner-border text-primary\\\" role=\\\"status\\\">\\r\\n                <span class=\\\"sr-only\\\" translate><span translate>Loading</span>...</span>\\r\\n              </div>\\r\\n            </button> -->\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\";","export default \"<div class=\\\"sm-padding data-table\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 text-center\\\">\\r\\n        <img src=\\\"assets/images/payment-sucess.svg\\\" alt=\\\"payment success\\\" class=\\\"payment-img\\\" />\\r\\n        <h6 class=\\\"color-green mt-3\\\" translate><span translate>Payment success! Will redirect in</span> {{second}}s</h6>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { Restangular } from 'ngx-restangular';\r\n\r\n@Injectable()\r\nexport class AppointmentService {\r\n  constructor(private restangular: Restangular) {}\r\n\r\n  create(credentials: any): Promise<any> {\r\n    return this.restangular.all('appointments/book').post(credentials).toPromise();\r\n  }\r\n  search(params: any): Promise<any> {\r\n    return this.restangular.one('appointments').get(params).toPromise();\r\n  }\r\n  cancel(id: string, data: any): Promise<any> {\r\n    return this.restangular.one('appointments', id).one('cancel').customPOST(data).toPromise();\r\n  }\r\n  checkFree(tutorId: any): Promise<any> {\r\n    return this.restangular.one('appointments/check').one('free').customPOST(tutorId).toPromise();\r\n  }\r\n  findOne(id): Promise<any> {\r\n    return this.restangular.one('appointments', id).get().toPromise();\r\n  }\r\n  appointmentTutor(tutorId: any, params: any): Promise<any> {\r\n    return this.restangular.one('appointments/tutors', tutorId).get(params).toPromise();\r\n  }\r\n\r\n  checkOverlap(data: any): Promise<any> {\r\n    return this.restangular.one('appointments/check').one('overlap').customPOST(data).toPromise();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-payment-cancel',\r\n  templateUrl: './cancel.html'\r\n})\r\nexport class PaymentCancelComponent implements OnInit, OnDestroy {\r\n  public second: any = 0;\r\n  public interval: any;\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.second = 5;\r\n    this.interval = window.setInterval(() => {\r\n      if (this.second > 0) {\r\n        this.second = this.second - 1;\r\n      } else {\r\n        window.clearInterval(this.interval);\r\n        this.router.navigate(['/users/transaction/list']);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    window.clearInterval(this.interval);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { StripeService, StripeCardComponent } from 'ngx-stripe';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { StripeElementsOptions } from '@stripe/stripe-js';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService, CountryService } from '../../../shared/services';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AppointmentService } from '../../../appointment/services/appointment.service';\r\nimport { PaymentService } from '../../payment.service';\r\nimport { IUser } from '../../../user/interface';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-pay',\r\n  templateUrl: './pay.html'\r\n})\r\nexport class PayComponent implements OnInit {\r\n  @ViewChild(StripeCardComponent) card: StripeCardComponent;\r\n  public cardHolderName: any = '';\r\n  public cardOptions: any = {\r\n    hidePostalCode: true,\r\n    style: {\r\n      base: {\r\n        iconColor: '#666EE8',\r\n        color: '#31325F',\r\n        fontWeight: 300,\r\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n        fontSize: '18px',\r\n        '::placeholder': {\r\n          color: 'rgba(0, 157, 151, 0.75)'\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // optional parameters\r\n  public elementsOptions: StripeElementsOptions = {\r\n    locale: 'en'\r\n  };\r\n  public stripeTest: FormGroup;\r\n  public stripeToken: any = null;\r\n  public loading: boolean = false;\r\n  public errorCard: any;\r\n  public errorText: string;\r\n  public paymentParams: any;\r\n  public type: string;\r\n  public targetType: string;\r\n  public paymentIntent: any;\r\n  public submitted: boolean = false;\r\n  public countries: any;\r\n  public targetName: string;\r\n  public tutorName: string;\r\n  public currentUser: IUser;\r\n  constructor(\r\n    private router: Router,\r\n    private stripeService: StripeService,\r\n    private fb: FormBuilder,\r\n    private auth: AuthService,\r\n    private toasty: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private appointmentService: AppointmentService,\r\n    private paymentService: PaymentService,\r\n    private countryService: CountryService,\r\n    private translate: TranslateService\r\n  ) {\r\n    if (this.auth.isLoggedin()) {\r\n      this.auth.getCurrentUser().then(resp => (this.currentUser = resp));\r\n    }\r\n    this.type = this.route.snapshot.queryParams.type;\r\n    this.targetType = this.route.snapshot.queryParams.targetType;\r\n    this.targetName = this.route.snapshot.queryParams.targetName;\r\n    this.tutorName = this.route.snapshot.queryParams.tutorName;\r\n    this.router.events.pipe(filter(e => e instanceof NavigationEnd)).subscribe(e => {\r\n      const navigation = this.router.getCurrentNavigation();\r\n      if (navigation && navigation.extras && navigation.extras.state) {\r\n        this.paymentParams = navigation.extras.state;\r\n      }\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    if (!this.paymentParams) {\r\n      const params = localStorage.getItem('paymentParams');\r\n      if (params) {\r\n        this.paymentParams = JSON.parse(params);\r\n      } else {\r\n        this.router.navigate(['/home']);\r\n      }\r\n    }\r\n    this.countries = this.countryService.getCountry();\r\n    this.stripeService.setKey(window.appConfig.stripeKey);\r\n    this.stripeTest = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      emailRecipient: ['', [Validators.email]],\r\n      address_line1: ['', [Validators.required]],\r\n      address_city: ['', [Validators.required]],\r\n      address_state: ['', [Validators.required]],\r\n      address_country: [undefined, [Validators.required]]\r\n      //address_zip: ['']\r\n    });\r\n  }\r\n\r\n  buy() {\r\n    this.submitted = true;\r\n    console.log(this.stripeTest);\r\n\r\n    if (this.stripeTest.invalid) {\r\n      return this.toasty.error(this.translate.instant('Please complete the required fields'));\r\n    }\r\n    this.loading = true;\r\n    const name = this.stripeTest.get('name').value;\r\n    const emailRecipient = this.stripeTest.get('emailRecipient').value;\r\n    if (this.type === 'gift' && !emailRecipient) {\r\n      this.loading = false;\r\n      return this.toasty.error(this.translate.instant('Please enter email of recipient'));\r\n    }\r\n    if (!name) {\r\n      this.loading = false;\r\n      return this.toasty.error(this.translate.instant('Please enter your name'));\r\n    }\r\n    if (!this.paymentParams) {\r\n      return this.toasty.error(this.translate.instant('Can not found payment info, please try again!'));\r\n    }\r\n    if (this.targetType === 'webinar' || this.targetType === 'course') {\r\n      this.paymentParams.emailRecipient = emailRecipient || '';\r\n      this.paymentService\r\n        .enroll(this.paymentParams)\r\n        .then(resp => {\r\n          this.submitted = false;\r\n          this.paymentIntent = resp.data;\r\n          if (this.paymentIntent.paymentMode === 'test') return this.router.navigate(['/payments/success']);\r\n          this.confirmPayment();\r\n        })\r\n        .catch(err => {\r\n          this.loading = false;\r\n          this.submitted = false;\r\n          this.toasty.error(\r\n            this.translate.instant(\r\n              (err.data && err.data.data && err.data.data.message) ||\r\n                err.data.message ||\r\n                'Something went wrong, please try again!'\r\n            )\r\n          );\r\n          this.router.navigate(['/payments/cancel']);\r\n        });\r\n    } else {\r\n      this.appointmentService\r\n        .create(this.paymentParams)\r\n        .then(resp => {\r\n          this.submitted = false;\r\n          this.paymentIntent = resp.data;\r\n          if (this.paymentIntent.paymentMode === 'test') return this.router.navigate(['/payments/success']);\r\n          this.confirmPayment();\r\n        })\r\n        .catch(err => {\r\n          this.loading = false;\r\n          this.submitted = false;\r\n          localStorage.removeItem('title');\r\n          localStorage.removeItem('paymentParams');\r\n          this.toasty.error(\r\n            this.translate.instant(\r\n              (err.data && err.data.data && err.data.data.message) ||\r\n                err.data.message ||\r\n                'Something went wrong, please try again!'\r\n            )\r\n          );\r\n          this.router.navigate(['/payments/cancel']);\r\n        });\r\n    }\r\n  }\r\n\r\n  confirmPayment() {\r\n    const name = this.stripeTest.get('name').value;\r\n    const address_line1 = this.stripeTest.get('address_line1').value;\r\n    const address_city = this.stripeTest.get('address_city').value;\r\n    const address_state = this.stripeTest.get('address_state').value;\r\n    const address_country = this.stripeTest.get('address_country').value;\r\n    //const address_zip = this.stripeTest.get('address_zip').value;\r\n    this.stripeService\r\n      .confirmCardPayment(this.paymentIntent.stripeClientSecret, {\r\n        payment_method: {\r\n          card: this.card.element,\r\n          billing_details: {\r\n            name\r\n          }\r\n        },\r\n        shipping: {\r\n          name: name,\r\n          address: {\r\n            line1: address_line1,\r\n            city: address_city,\r\n            country: address_country,\r\n            //postal_code: address_zip,\r\n            state: address_state\r\n          }\r\n        }\r\n      })\r\n      .subscribe(result => {\r\n        this.loading = false;\r\n        localStorage.removeItem('title');\r\n        localStorage.removeItem('paymentParams');\r\n        if (result && result.paymentIntent && result.paymentIntent.status === 'succeeded') {\r\n          return this.router.navigate(['/payments/success']);\r\n        } else if (result && result.error) {\r\n          this.toasty.error(this.translate.instant(result.error.message));\r\n          return this.router.navigate(['/payments/cancel']);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-payment-success',\r\n  templateUrl: './success.html'\r\n})\r\nexport class PaymentSuccessComponent implements OnInit, OnDestroy {\r\n  public second: any = 0;\r\n  public interval: any;\r\n  constructor(private router: Router) {}\r\n  ngOnInit() {\r\n    this.second = 5;\r\n    this.interval = window.setInterval(() => {\r\n      if (this.second > 0) {\r\n        this.second = this.second - 1;\r\n      } else {\r\n        window.clearInterval(this.interval);\r\n        this.router.navigate(['/users/transaction/list']);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    window.clearInterval(this.interval);\r\n  }\r\n}\r\n","import { CourseService } from './../shared/services/course.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MediaModule } from '../media/media.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { PaymentRoutingModule } from '../payment/payment.routing';\r\nimport { PaymentSuccessComponent } from './components/success/success.component';\r\nimport { PaymentCancelComponent } from './components/cancel/cancel.component';\r\nimport { PayComponent } from './components/pay/pay.component';\r\nimport { UtilsModule } from '../utils/utils.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgxStripeModule } from 'ngx-stripe';\r\nimport { AuthService } from '../shared/services';\r\nimport { WebinarService } from '../webinar/webinar.service';\r\nimport { AppointmentService } from '../appointment/services/appointment.service';\r\nimport { PaymentService } from './payment.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    PaymentRoutingModule,\r\n    MediaModule,\r\n    NgSelectModule,\r\n    UtilsModule,\r\n    TranslateModule.forChild(),\r\n    NgxStripeModule.forRoot(),\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [PaymentSuccessComponent, PaymentCancelComponent, PayComponent],\r\n  providers: [AuthService, WebinarService, AppointmentService, CourseService, PaymentService],\r\n  exports: [],\r\n  entryComponents: []\r\n})\r\nexport class PaymentModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PaymentSuccessComponent } from './components/success/success.component';\r\nimport { PaymentCancelComponent } from './components/cancel/cancel.component';\r\nimport { PayComponent } from './components/pay/pay.component';\r\nimport { ConfigResolver } from '../shared/resolver';\r\nconst routes: Routes = [\r\n  {\r\n    path: 'success',\r\n    component: PaymentSuccessComponent\r\n  },\r\n  {\r\n    path: 'cancel',\r\n    component: PaymentCancelComponent\r\n  },\r\n  {\r\n    path: 'pay',\r\n    component: PayComponent,\r\n    resolve: {\r\n      appConfig: ConfigResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\n\r\n@Injectable()\r\nexport class PaymentService {\r\n  constructor(private restangular: Restangular) {}\r\n  enroll(params: any): Promise<any> {\r\n    return this.restangular.all('enroll').post(params).toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\n\r\n@Injectable()\r\nexport class WebinarService {\r\n  constructor(private restangular: Restangular) {}\r\n\r\n  create(params: any): Promise<any> {\r\n    return this.restangular.all('webinars').post(params).toPromise();\r\n  }\r\n\r\n  search(params: any): Promise<any> {\r\n    return this.restangular.one('webinars').get(params).toPromise();\r\n  }\r\n\r\n  findOne(id): Promise<any> {\r\n    return this.restangular.one('webinars', id).get().toPromise();\r\n  }\r\n\r\n  update(id, data): Promise<any> {\r\n    return this.restangular.one('webinars', id).customPUT(data).toPromise();\r\n  }\r\n\r\n  delete(id): Promise<any> {\r\n    return this.restangular.one('webinars', id).customDELETE().toPromise();\r\n  }\r\n\r\n  enroll(params: any): Promise<any> {\r\n    return this.restangular.all('enroll').post(params).toPromise();\r\n  }\r\n\r\n  gift(params: any): Promise<any> {\r\n    return this.restangular.all('gift').post(params).toPromise();\r\n  }\r\n\r\n  checkUsedCoupon(id: string): Promise<any> {\r\n    return this.restangular.one('coupons/check-used-coupon', id).get().toPromise();\r\n  }\r\n\r\n  applyCoupon(params): Promise<any> {\r\n    return this.restangular.one('coupon/apply-coupon').get(params).toPromise();\r\n  }\r\n\r\n  checkBooked(webinarId: String, targetType: String): Promise<any> {\r\n    return this.restangular.one(`enroll/${webinarId}/${targetType}/booked`).post().toPromise();\r\n  }\r\n\r\n  getEnrolledList(id: string): Promise<any> {\r\n    return this.restangular.one(`webinars/${id}/enrolled`).get().toPromise();\r\n  }\r\n\r\n  checkOverlapWebinar(data: any): Promise<any> {\r\n    return this.restangular.one('webinars/check').one('overlap').customPOST(data).toPromise();\r\n  }\r\n\r\n  getLatest(id: string): Promise<any> {\r\n    return this.restangular.one(`webinars/${id}/latest`).get().toPromise();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}